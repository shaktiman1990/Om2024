# Brute Force Approch
class Solution {
public:
    int maxArea(vector<int>& height) 
    {
        int maxwater=0;
        for(int i=0;i<height.size();i++)
        {
            for(int j=i+1;j<height.size();j++)
            {
                int ht=min(height[i],height[j]);
               int width=j-i;
               int area=width*ht;
                
                if(area>maxwater)
                {
                    maxwater=area;
                }

            }
        }
        return maxwater;
    }
};

# PTIMAL WAY 
class Solution {
public:
    int maxArea(vector<int>& height) 
    {
        int maxwater=0;
        int lp=0,rp=height.size()-1;

        while(lp < rp)
        {
            int w =rp-lp;
            int ht = min(height[lp],height[rp]);
            int currentwater = w * ht;
            maxwater = max(maxwater , currentwater);

            height[lp] < height[rp] ? lp++ : rp--;
        }
        return maxwater;
    }
};
